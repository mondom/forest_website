var BURGER_BTN,NAV_MOBILE,NAV_MOBILE_CLOSE_BTN,main=function(){prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=function(){BURGER_BTN=document.querySelector(".header__top-burger-btn"),NAV_MOBILE=document.querySelector(".nav-mobile"),NAV_MOBILE_CLOSE_BTN=document.querySelector(".nav-mobile__btn-close")},prepareDOMEvents=function(){},navLinks=(document.addEventListener("DOMContentLoaded",main),document.querySelectorAll(".nav-desktop__item")),activeSectionId="",removeActiveClass=function(){navLinks.forEach(function(e){e.classList.remove("active-nav-link")})},updateActiveLink=function(){var e,c="";0===window.scrollY||window.innerHeight+window.scrollY>=document.documentElement.scrollHeight?window.location.pathname.endsWith("contact.html")||(removeActiveClass(),activeSectionId=""):(document.querySelectorAll(".section").forEach(function(e){var n,t=e.getBoundingClientRect(),i=t.top+window.scrollY,o="about-us"===e.id?(n=window.innerHeight/3,2*window.innerHeight/3):(e.id,n=window.innerHeight/2,window.innerHeight);i<=window.scrollY+o&&i+t.height>=window.scrollY+n&&(c=e.id)}),c&&c!==activeSectionId&&(removeActiveClass(),(e=document.querySelector(".nav-desktop__item[href='index.html#".concat(c,"']")))&&e.classList.add("active-nav-link"),activeSectionId=c))};window.addEventListener("scroll",updateActiveLink),window.addEventListener("load",function(){var e;window.location.pathname.endsWith("contact.html")?(removeActiveClass(),(e=document.querySelector(".nav-desktop__item[href='contact.html']"))&&e.classList.add("active-nav-link"),activeSectionId=""):updateActiveLink()}),updateActiveLink();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiQlVSR0VSX0JUTiIsIk5BVl9NT0JJTEUiLCJtYWluIiwicHJlcGFyZURPTUVsZW1lbnRzIiwicHJlcGFyZURPTUV2ZW50cyIsInF1ZXJ5U2VsZWN0b3IiLCJkb2N1bWVudCIsIk5BVl9NT0JJTEVfQ0xPU0VfQlROIiwibmF2TGlua3MiLCJyZW1vdmVBY3RpdmVDbGFzcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ1cGRhdGVBY3RpdmVMaW5rIiwid2luZG93Iiwic2Nyb2xsWSIsIm5hdkxpbmsiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwibmV3QWN0aXZlTGluayIsIm5ld0FjdGl2ZVNlY3Rpb25JZCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImRvY3VtZW50RWxlbWVudCIsInNjcm9sbEhlaWdodCIsInNlY3Rpb25Ub3AiLCJhY3RpdmVTZWN0aW9uSWQiLCJ0aHJlc2hvbGRCb3R0b20iLCJpbm5lckhlaWdodCIsInNlY3Rpb24iLCJ0aHJlc2hvbGRUb3AiLCJyZWN0IiwiaXNWaXNpYmxlIiwiaWQiLCJoZWlnaHQiLCJjb25jYXQiLCJhZGQiLCJhZGRFdmVudExpc3RlbmVyIiwiY29udGFjdExpbmsiLCJlbmRzV2l0aCIsImNsYXNzTGlzdCJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsV0FDQUMsV0FEQUQscUJBS0VFLEtBQU8sV0FDWEMsbUJBQW1CLEVBQ25CQyxpQkFBaUIsQ0FDbkIsRUFHRUosbUJBQXNCSyxXQUN0QkosV0FBYUssU0FBU0QsY0FBYyx5QkFBYyxFQUNsREUsV0FBQUEsU0FBb0JGLGNBQVlBLGFBQWMsRUFFL0NFLHFCQUFBRCxTQUFBRCxjQUFBLHdCQUFBLENBQUQsRUFPQUMsaUJBQXlCLGFBS25CRSxVQUtORixTQUFNRyxpQkFBb0IsbUJBQXBCQSxJQUFpQkEsRUFMTkgsU0FBU0ksaUJBQWlCLG9CQUFvQixHQVl6REMsZ0JBQWdCLEdBR3BCRixrQkFBQSxXQUNBRCxTQUFJSSxRQUFPQyxTQUFBQSxHQUNUQyxFQUFLRixVQUFPRyxPQUFTQyxpQkFBa0IsQ0FUekMsQ0FBQyxDQUNILEVBYUVMLGlCQUFBLFdBVEEsSUE2REZNLEVBN0RNQyxFQUFxQixHQWFGQyxJQUFyQlAsT0FBVUMsU0FBV00sT0FBQUEsWUFBdUJQLE9BQUFDLFNBQUFQLFNBQUFjLGdCQUFBQyxhQUN0Q0MsT0FBQUEsU0FBaUJOLFNBQU9KLFNBQU9DLGNBQU8sSUFDNUNKLGtCQUFzQmEsRUFFdEJDLGdCQUFnQixLQUxsQmpCLFNBV0lrQixpQkFBa0JaLFVBQU9hLEVBQUFBLFFBQWUsU0FBQUMsR0FDMUMsSUFJRUMsRUFKREMsRUFBVUYsRUFBVVAsc0JBQWMsRUFDakNRLEVBQWVmLEVBQU9hLElBQUFBLE9BQVdaLFFBV25DVyxFQUZlLGFBQVhLLEVBQUFBLElBQ0ZYLEVBQUFBLE9BQXFCUSxZQUFVLEVBQ2pDLEVBQUFkLE9BQUFhLFlBQUEsSUFDQUMsRUFBQUksR0FaRUgsRUFBZWYsT0FBT2EsWUFBYyxFQWN4Q2IsT0FBQWEsYUFNcUJILEdBQVlqQixPQUFBQSxRQUFhbUIsR0FuQnhCWixFQUFPYSxFQUFhTSxRQW1CSUMsT0FDSGQsUUFBQUEsSUFLekNBLEVBQUFRLEVBQUFJLEdBZEYsQ0FBQyxFQW1CRlosR0FBQUEsSUFBQUssa0JBRURkLGtCQUFBLEdBR0FRLEVBQUFYLFNBQUFELGNBQUEsdUNBQUEyQixPQUNzQ2QsRUFBQSxJQUFBLENBQ3BDLElBSUVULEVBQUFBLFVBQW1Cd0IsSUFBQSxpQkFBQSxFQU9uQlYsZ0JBQUFMLEdBbEJKLEVBdUJBTixPQUFFc0IsaUJBQUEsU0FBQXZCLGdCQUFBLEVBR0ZBLE9BQUFBLGlCQUFrQixPQUFBLFdBbkJoQixJQUtRd0IsRUFMZ0J2QixPQUFPRyxTQUFTQyxTQUFTb0IsU0FBUyxjQUFjLEdBSXRFM0Isa0JBQWtCLEdBQ1owQixFQUFjN0IsU0FBU0QsY0FBYSx5Q0FFMUMsSUFHRThCLEVBQVlFLFVBQVVKLElBQUksaUJBQWlCLEVBRTdDVixnQkFBa0IsSUFFbEJaLGlCQUFpQixDQUVyQixDQUFDLEVBR0RBLGlCQUFpQiIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBCVVJHRVJfQlROO1xyXG5sZXQgTkFWX01PQklMRTtcclxubGV0IE5BVl9NT0JJTEVfQ0xPU0VfQlROO1xyXG5cclxuXHJcbmNvbnN0IG1haW4gPSAoKSA9PiB7XHJcbiAgcHJlcGFyZURPTUVsZW1lbnRzKCk7XHJcbiAgcHJlcGFyZURPTUV2ZW50cygpO1xyXG59O1xyXG5cclxuY29uc3QgcHJlcGFyZURPTUVsZW1lbnRzID0gKCkgPT4ge1xyXG4gIEJVUkdFUl9CVE4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmhlYWRlcl9fdG9wLWJ1cmdlci1idG5cIik7XHJcbiAgTkFWX01PQklMRSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2LW1vYmlsZVwiKTtcclxuICBOQVZfTU9CSUxFX0NMT1NFX0JUTiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2LW1vYmlsZV9fYnRuLWNsb3NlXCIpO1xyXG5cclxufTtcclxuXHJcbmNvbnN0IHByZXBhcmVET01FdmVudHMgPSAoKSA9PiB7XHJcbiAgLy8gRXZlbnR5IGRsYSBidXJnZXIgbWVudSBpdGQuXHJcbn07XHJcblxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgbWFpbik7XHJcblxyXG5cclxuXHJcblxyXG5jb25zdCBuYXZMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubmF2LWRlc2t0b3BfX2l0ZW1cIik7XHJcblxyXG5sZXQgYWN0aXZlU2VjdGlvbklkID0gJyc7XHJcblxyXG4vLyBGdW5rY2phIHVzdXdhasSFY2Ega2xhc8SZICdhY3RpdmUtbmF2LWxpbmsnIHogd3N6eXN0a2ljaCBsaW5rw7N3XHJcbmNvbnN0IHJlbW92ZUFjdGl2ZUNsYXNzID0gKCkgPT4ge1xyXG4gIG5hdkxpbmtzLmZvckVhY2gobmF2TGluayA9PiB7XHJcbiAgICBuYXZMaW5rLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmUtbmF2LWxpbmtcIik7XHJcbiAgfSk7XHJcbn07XHJcblxyXG4vLyBGdW5rY2phIGFrdHVhbGl6dWrEhWNhIGFrdHl3bnkgbGluayBuYSBwb2RzdGF3aWUgcHJ6ZXdpamFuaWFcclxuY29uc3QgdXBkYXRlQWN0aXZlTGluayA9ICgpID0+IHtcclxuICBsZXQgbmV3QWN0aXZlU2VjdGlvbklkID0gJyc7XHJcblxyXG4gIC8vIFNwcmF3ZMW6LCBjenkgc3Ryb25hIGplc3QgbmEgc2FtZWogZ8OzcnplIGx1YiBuYSBkb2xlXHJcbiAgaWYgKHdpbmRvdy5zY3JvbGxZID09PSAwIHx8IHdpbmRvdy5pbm5lckhlaWdodCArIHdpbmRvdy5zY3JvbGxZID49IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQpIHtcclxuICAgIGlmICghd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmVuZHNXaXRoKCdjb250YWN0Lmh0bWwnKSkge1xyXG4gICAgICByZW1vdmVBY3RpdmVDbGFzcygpO1xyXG4gICAgICBhY3RpdmVTZWN0aW9uSWQgPSAnJzsgLy8gUmVzZXR1aiBha3R5d27EhSBzZWtjasSZXHJcbiAgICB9XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvLyBTcHJhd2TFuiBrYcW8ZMSFIHNla2NqxJlcclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnNlY3Rpb25cIikuZm9yRWFjaChzZWN0aW9uID0+IHtcclxuICAgIGNvbnN0IHJlY3QgPSBzZWN0aW9uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgY29uc3Qgc2VjdGlvblRvcCA9IHJlY3QudG9wICsgd2luZG93LnNjcm9sbFk7XHJcbiAgICBjb25zdCBzZWN0aW9uQm90dG9tID0gc2VjdGlvblRvcCArIHJlY3QuaGVpZ2h0O1xyXG5cclxuICAgIGxldCB0aHJlc2hvbGRUb3A7XHJcbiAgICBsZXQgdGhyZXNob2xkQm90dG9tO1xyXG5cclxuICAgIC8vIFVzdGF3aWVuaWUgcHJvZ8OzdyBkbGEga2HFvGRlaiBzZWtjamlcclxuICAgIGlmIChzZWN0aW9uLmlkID09PSAnYWJvdXQtdXMnKSB7XHJcbiAgICAgIHRocmVzaG9sZFRvcCA9IHdpbmRvdy5pbm5lckhlaWdodCAvIDM7IC8vIFByw7NnIGRsYSBzZWtjamkgJ2Fib3V0LXVzJ1xyXG4gICAgICB0aHJlc2hvbGRCb3R0b20gPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAyIC8gMzsgLy8gRG9kYXRrb3d5IHByw7NnIGRsYSBzZWtjamkgJ2Fib3V0LXVzJ1xyXG4gICAgfSBlbHNlIGlmIChzZWN0aW9uLmlkID09PSAnb2ZmZXInKSB7XHJcbiAgICAgIHRocmVzaG9sZFRvcCA9IHdpbmRvdy5pbm5lckhlaWdodCAvIDI7IC8vIFByw7NnIGRsYSBzZWtjamkgJ29mZmVyJ1xyXG4gICAgICB0aHJlc2hvbGRCb3R0b20gPSB3aW5kb3cuaW5uZXJIZWlnaHQ7IC8vIERvZGF0a293eSBwcsOzZyBkbGEgc2VrY2ppICdvZmZlcidcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRocmVzaG9sZFRvcCA9IHdpbmRvdy5pbm5lckhlaWdodCAvIDI7IC8vIERvbXnFm2xueSBwcsOzZyBkbGEgaW5ueWNoIHNla2NqaVxyXG4gICAgICB0aHJlc2hvbGRCb3R0b20gPSB3aW5kb3cuaW5uZXJIZWlnaHQ7IC8vIERvbXnFm2xueSBwcsOzZyBkbGEgaW5ueWNoIHNla2NqaVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGlzVmlzaWJsZSA9IChzZWN0aW9uVG9wIDw9IHdpbmRvdy5zY3JvbGxZICsgdGhyZXNob2xkQm90dG9tICYmIHNlY3Rpb25Cb3R0b20gPj0gd2luZG93LnNjcm9sbFkgKyB0aHJlc2hvbGRUb3ApO1xyXG5cclxuICAgIGlmIChpc1Zpc2libGUpIHtcclxuICAgICAgbmV3QWN0aXZlU2VjdGlvbklkID0gc2VjdGlvbi5pZDtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgLy8gU3ByYXdkxbosIGN6eSBub3dhIHNla2NqYSBqZXN0IGlubmEgbmnFvCBvYmVjbmllIGFrdHl3bmFcclxuICBpZiAobmV3QWN0aXZlU2VjdGlvbklkICYmIG5ld0FjdGl2ZVNlY3Rpb25JZCAhPT0gYWN0aXZlU2VjdGlvbklkKSB7XHJcbiAgICAvLyBVc3XFhCBha3R5d27EhSBrbGFzxJkgeiBwb3ByemVkbmllZ28gbGlua3VcclxuICAgIHJlbW92ZUFjdGl2ZUNsYXNzKCk7XHJcbiAgICBcclxuICAgIC8vIERvZGFqIGtsYXPEmSAnYWN0aXZlLW5hdi1saW5rJyBkbyBub3dlZ28gbGlua3VcclxuICAgIGNvbnN0IG5ld0FjdGl2ZUxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgLm5hdi1kZXNrdG9wX19pdGVtW2hyZWY9J2luZGV4Lmh0bWwjJHtuZXdBY3RpdmVTZWN0aW9uSWR9J11gXHJcbiAgICApO1xyXG5cclxuICAgIGlmIChuZXdBY3RpdmVMaW5rKSB7XHJcbiAgICAgIG5ld0FjdGl2ZUxpbmsuY2xhc3NMaXN0LmFkZChcImFjdGl2ZS1uYXYtbGlua1wiKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gWmFrdHVhbGl6dWogYWt0eXduZSBJRCBzZWtjamlcclxuICAgIGFjdGl2ZVNlY3Rpb25JZCA9IG5ld0FjdGl2ZVNlY3Rpb25JZDtcclxuICB9XHJcbn07XHJcblxyXG4vLyBOYXPFgnVjaHVqIHpkYXJ6ZW5pYSBzY3JvbGxcclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHVwZGF0ZUFjdGl2ZUxpbmspO1xyXG5cclxuLy8gTmFzxYJ1Y2h1aiB6ZGFyemVuaWEgxYJhZG93YW5pYSBzdHJvbnlcclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XHJcbiAgY29uc3QgaXNPbkNvbnRhY3RQYWdlID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lLmVuZHNXaXRoKCdjb250YWN0Lmh0bWwnKTtcclxuXHJcbiAgaWYgKGlzT25Db250YWN0UGFnZSkge1xyXG4gICAgLy8gSmXFm2xpIGplc3RlxZtteSBuYSBzdHJvbmllIGtvbnRha3Rvd2VqLCB6YXpuYWN6IG9kcG93aWVkbmkgbGlua1xyXG4gICAgcmVtb3ZlQWN0aXZlQ2xhc3MoKTtcclxuICAgIGNvbnN0IGNvbnRhY3RMaW5rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgYC5uYXYtZGVza3RvcF9faXRlbVtocmVmPSdjb250YWN0Lmh0bWwnXWBcclxuICAgICk7XHJcblxyXG4gICAgaWYgKGNvbnRhY3RMaW5rKSB7XHJcbiAgICAgIGNvbnRhY3RMaW5rLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmUtbmF2LWxpbmtcIik7XHJcbiAgICB9XHJcbiAgICBhY3RpdmVTZWN0aW9uSWQgPSAnJzsgLy8gUmVzZXR1aiBha3R5d27EhSBzZWtjasSZLCBnZHkgamVzdGXFm215IG5hIHN0cm9uaWUga29udGFrdG93ZWpcclxuICB9IGVsc2Uge1xyXG4gICAgdXBkYXRlQWN0aXZlTGluaygpO1xyXG4gIH1cclxufSk7XHJcblxyXG4vLyBVcnVjaG9tIGZ1bmtjasSZIG5hIHBvY3rEhXRrdSwgYWJ5IHVzdGF3acSHIHByYXdpZMWCb3d5IGxpbmsgbmEgemHFgmFkb3dhbmVqIHN0cm9uaWVcclxudXBkYXRlQWN0aXZlTGluaygpO1xyXG4iXX0=
